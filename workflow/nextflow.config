manifest {
    name = '<Workflow name>'
    author = 'Mahesh Binzer-Panchal'
    homePage = ''
    description = '<Workflow description>'
    mainScript = 'main.nf'
    //  '!>=21.04.0' : Run with version 21.04.0 or higher, otherwise exit.
    nextflowVersion = '!>=21.04.0'
    version = '0.1'
}

// Default Workflow parameters
// Override them in the params.yml located in the analyses directories.
params {

    // Workflow inputs
    samples = ''

    // Workflow outputs
    results = 'results'

    // General module configuration
    multiqc_config = "$baseDir/configs/multiqc_conf.yaml"

    // Enable Conda for software management (using Docker or Singularity is recommended).
    enable_conda = false
}

profiles {

    // A profile for the Uppmax clusters
    uppmax {
        // Uppmax NAISS compute (project) allocation
        params.project = ''
        process {
            executor = 'slurm'
            clusterOptions = "-A $params.project"
            // Use node local storage for execution.
            scratch = '$SNIC_TMP'
        }
        // Specify resources to use.
        includeConfig "$projectDir/configs/compute_resources.config"
        // Specify singularity containers to use.
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
    }

    // A profile for running locally with Docker
    docker_local {
        process {
            executor = 'local'
            scratch = true
        }
        includeConfig "$projectDir/configs/compute_resources.config"
        docker.enabled = true
        docker.userEmulation = true
    }

    // A profile for running locally with Singularity
    // (e.g., using an interactive Uppmax session)
    singularity_local {
        process {
            executor = 'local'
            scratch = '$SNIC_TMP'
        }
        includeConfig "$projectDir/configs/compute_resources.config"
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
    }

    execution_report {
        timeline {
            enabled = true
            file = "${params.results}/pipeline_info/execution_timeline.html"
        }
        report {
            enabled = true
            file = "${params.results}/pipeline_info/execution_report.html"
        }
        trace {
            enabled = true
            file = "${params.results}/pipeline_info/execution_trace.txt"
        }
        dag {
            enabled = true
            file = "${params.results}/pipeline_info/pipeline_dag.svg"
        }
    }

}

// module configuration
includeConfig "$projectDir/configs/modules.config"
